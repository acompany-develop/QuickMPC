syntax = "proto3";

package managetocomputation;

option go_package = "github.com/acompany-develop/QuickMPC/src/Proto/ManageToComputationContainer";

// 引数無しにする際に使用
import "google/protobuf/empty.proto";
import "common_types/common_types.proto";


/**
 * ManageToComputation service
*/
service ManageToComputation {
    // receive executing computation request from manage container
    rpc ExecuteComputation(ExecuteComputationRequest) returns (google.protobuf.Empty) {}
    // receive predict request from manage container
    rpc Predict(PredictRequest) returns (google.protobuf.Empty) {}
    // receive progress check request from manage container
    rpc CheckProgress(CheckProgressRequest) returns (pb_common_types.JobProgress) {}
}

/**
 * the message of ExecuteComputationRequest
*/
message JoinOrder{
    repeated string dataIds = 1;
    repeated int32 join = 2;
    repeated int32 index = 3;
}
message Input{
    repeated int32 src = 1;
    repeated int32 target = 2;
}
message ExecuteComputationRequest {
    pb_common_types.ComputationMethod method_id = 1; // the methodID of this request
    string job_uuid = 2; // the jobUUID of this request
    JoinOrder table = 3;
    Input arg = 4;
}

/**
 * the message of CheckStateResponse
*/
message CheckStateResponse {
    int32 state = 1; // the state of computation container(1:working)
}

/**
 * the message of PredictRequest
*/
message PredictRequest {
    string job_uuid = 1;
    string model_param_job_uuid = 2;
    pb_common_types.PredictMethod model_id = 3;
    JoinOrder table = 4;
    repeated int32 src = 5;
}

message CheckProgressRequest {
    string job_uuid = 1;
}
