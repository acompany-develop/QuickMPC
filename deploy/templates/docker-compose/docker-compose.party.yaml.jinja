version: "3.3"
services:
  computation-container:
    tty: true
    expose:
      - "31020"
      - "50010"
      - "50020"
    image: ghcr.io/acompany-develop/quickmpc-cc{{ ':' if docker_image_tag}}{{ docker_image_tag }}
    build:
      context: {{ docker_context }}
      dockerfile: packages/server/computation_container/Dockerfile
      target: dep-runner
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-cc:{{ docker_image_tag }}
    volumes:
      - type: bind
        source: ../config/computation-container/compute{{ party_id }}
        target: /QuickMPC/config
      - type: volume
        source: sharedb
        target: /db/share
      - type: volume
        source: resultdb
        target: /db/result
    env_file:
      - {{ envs.parties[(party_id)|string]['computation-container']['.env'].__path__ }}
      - {{ envs.others['jwt-envs']['client.jwt.env'].__path__ }}
    networks:
      shared-network:
        ipv4_address: 10.0.{{ party_id }}.20
    depends_on:
      compute-envoy-container:
        condition: service_started
    command: ["/bin/bash", "-c", "printenv && ./bazel-bin/computation_container"]
    healthcheck:
      test:
        - CMD
        - /bin/sh
        - -c
        - |-
          /bin/grpc_health_probe -addr=:50010 && \
          /bin/grpc_health_probe -addr=:50020 && \
          /bin/grpc_health_probe -addr=:31020
      interval: 3s
      timeout: 5s
      start_period: 5s
    labels:
      kompose.image-pull-secret: registry-credential
      kompose.volume.type: persistentVolumeClaim

  compute-envoy-container:
    tty: true # 起動しっぱなし
    image: envoyproxy/envoy:v1.17.1
    volumes:
      - type: bind
        source: {{ envs.parties[(party_id)|string]['computation-container']['envoy.yaml'].__path__ }}
        target: /etc/envoy/envoy.yaml
    expose:
      - "50020"
      - "31020"
    networks:
      shared-network:
        ipv4_address: 10.0.{{ party_id }}.21
    command: ["/bin/sh", "-c", "/usr/local/bin/envoy -c /etc/envoy/envoy.yaml"]
    labels:
      kompose.service.type: "nodeport"

  manage-container:
    tty: true
    image: ghcr.io/acompany-develop/quickmpc-mc{{ ':' if docker_image_tag}}{{ docker_image_tag }}
    build:
      context: {{ docker_context }}
      dockerfile: packages/server/manage_container/Dockerfile
      target: dep-runner
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-mc:{{ docker_image_tag }}
    volumes:
      - type: bind
        source: ../config/manage-container/manage{{ party_id }}
        target: /QuickMPC/config
      - type: volume
        source: sharedb
        target: /db/share
      - type: volume
        source: resultdb
        target: /db/result
    env_file:
      - {{ envs.parties[(party_id)|string]['manage-container']['.env'].__path__ }}
      - {{ envs.others['jwt-envs']['client.jwt.env'].__path__ }}
    expose:
      - "50011"
      - "51011"
    networks:
      shared-network:
        ipv4_address: 10.0.{{ party_id }}.10
    depends_on:
      manage-envoy-container:
        condition: service_started
      computation_container:
        condition: service_started
    command: ["/bin/bash", "-c", "printenv && ./manage_container"]
    healthcheck:
      test:
        - CMD
        - /bin/sh
        - -c
        - |-
          /bin/grpc_health_probe -addr=:50011 && \
          /bin/grpc_health_probe -addr=:51011
      interval: 3s
      timeout: 5s
      start_period: 5s
    labels:
      kompose.image-pull-secret: registry-credential
      kompose.volume.type: persistentVolumeClaim

  manage-envoy-container:
    tty: true # 起動しっぱなし
    image: envoyproxy/envoy:v1.17.1
    volumes:
      - type: bind
        source: {{ envs.parties[(party_id)|string]['manage-container']['envoy.yaml'].__path__ }}
        target: /etc/envoy/envoy.yaml
    expose:
      - "15000"
      - "50010"
    ports:
      - "0.0.0.0:{{ 50000 + party_id }}:50000"
    networks:
      shared-network:
        ipv4_address: 10.0.{{ party_id }}.11
    command: ["/bin/sh", "-c", "/usr/local/bin/envoy -c /etc/envoy/envoy.yaml"]
    labels:
      kompose.service.type: "nodeport"

volumes:
  sharedb:
  resultdb:

networks:
  shared-network:
    external: true
