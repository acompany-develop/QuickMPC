# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import libc_to_manage_pb2 as libc__to__manage__pb2


class LibcToManageStub(object):
    """*
    LibcToManage service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendShares = channel.unary_unary(
            '/libctomanage.LibcToManage/SendShares',
            request_serializer=libc__to__manage__pb2.SendSharesRequest.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
        self.DeleteShares = channel.unary_unary(
            '/libctomanage.LibcToManage/DeleteShares',
            request_serializer=libc__to__manage__pb2.DeleteSharesRequest.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
        self.GetSchema = channel.unary_unary(
            '/libctomanage.LibcToManage/GetSchema',
            request_serializer=libc__to__manage__pb2.GetSchemaRequest.SerializeToString,
            response_deserializer=libc__to__manage__pb2.GetSchemaResponse.FromString,
        )
        self.ExecuteComputation = channel.unary_unary(
            '/libctomanage.LibcToManage/ExecuteComputation',
            request_serializer=libc__to__manage__pb2.ExecuteComputationRequest.SerializeToString,
            response_deserializer=libc__to__manage__pb2.ExecuteComputationResponse.FromString,
        )
        self.GetComputationResult = channel.unary_stream(
            '/libctomanage.LibcToManage/GetComputationResult',
            request_serializer=libc__to__manage__pb2.GetComputationRequest.SerializeToString,
            response_deserializer=libc__to__manage__pb2.GetComputationResultResponse.FromString,
        )
        self.GetComputationStatus = channel.unary_unary(
            '/libctomanage.LibcToManage/GetComputationStatus',
            request_serializer=libc__to__manage__pb2.GetComputationRequest.SerializeToString,
            response_deserializer=libc__to__manage__pb2.GetComputationStatusResponse.FromString,
        )
        self.GetJobErrorInfo = channel.unary_unary(
            '/libctomanage.LibcToManage/GetJobErrorInfo',
            request_serializer=libc__to__manage__pb2.GetComputationRequest.SerializeToString,
            response_deserializer=libc__to__manage__pb2.GetJobErrorInfoResponse.FromString,
        )
        self.GetElapsedTime = channel.unary_unary(
            '/libctomanage.LibcToManage/GetElapsedTime',
            request_serializer=libc__to__manage__pb2.GetElapsedTimeRequest.SerializeToString,
            response_deserializer=libc__to__manage__pb2.GetElapsedTimeResponse.FromString,
        )
        self.AddShareDataFrame = channel.unary_unary(
            '/libctomanage.LibcToManage/AddShareDataFrame',
            request_serializer=libc__to__manage__pb2.AddShareDataFrameRequest.SerializeToString,
            response_deserializer=libc__to__manage__pb2.AddShareDataFrameResponse.FromString,
        )


class LibcToManageServicer(object):
    """*
    LibcToManage service
    """

    def SendShares(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteShares(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteComputation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetComputationResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetComputationStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobErrorInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetElapsedTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddShareDataFrame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LibcToManageServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'SendShares': grpc.unary_unary_rpc_method_handler(
            servicer.SendShares,
            request_deserializer=libc__to__manage__pb2.SendSharesRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'DeleteShares': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteShares,
            request_deserializer=libc__to__manage__pb2.DeleteSharesRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'GetSchema': grpc.unary_unary_rpc_method_handler(
            servicer.GetSchema,
            request_deserializer=libc__to__manage__pb2.GetSchemaRequest.FromString,
            response_serializer=libc__to__manage__pb2.GetSchemaResponse.SerializeToString,
        ),
        'ExecuteComputation': grpc.unary_unary_rpc_method_handler(
            servicer.ExecuteComputation,
            request_deserializer=libc__to__manage__pb2.ExecuteComputationRequest.FromString,
            response_serializer=libc__to__manage__pb2.ExecuteComputationResponse.SerializeToString,
        ),
        'GetComputationResult': grpc.unary_stream_rpc_method_handler(
            servicer.GetComputationResult,
            request_deserializer=libc__to__manage__pb2.GetComputationRequest.FromString,
            response_serializer=libc__to__manage__pb2.GetComputationResultResponse.SerializeToString,
        ),
        'GetComputationStatus': grpc.unary_unary_rpc_method_handler(
            servicer.GetComputationStatus,
            request_deserializer=libc__to__manage__pb2.GetComputationRequest.FromString,
            response_serializer=libc__to__manage__pb2.GetComputationStatusResponse.SerializeToString,
        ),
        'GetJobErrorInfo': grpc.unary_unary_rpc_method_handler(
            servicer.GetJobErrorInfo,
            request_deserializer=libc__to__manage__pb2.GetComputationRequest.FromString,
            response_serializer=libc__to__manage__pb2.GetJobErrorInfoResponse.SerializeToString,
        ),
        'GetElapsedTime': grpc.unary_unary_rpc_method_handler(
            servicer.GetElapsedTime,
            request_deserializer=libc__to__manage__pb2.GetElapsedTimeRequest.FromString,
            response_serializer=libc__to__manage__pb2.GetElapsedTimeResponse.SerializeToString,
        ),
        'AddShareDataFrame': grpc.unary_unary_rpc_method_handler(
            servicer.AddShareDataFrame,
            request_deserializer=libc__to__manage__pb2.AddShareDataFrameRequest.FromString,
            response_serializer=libc__to__manage__pb2.AddShareDataFrameResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'libctomanage.LibcToManage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

 # This class is part of an EXPERIMENTAL API.


class LibcToManage(object):
    """*
    LibcToManage service
    """

    @staticmethod
    def SendShares(request,
                   target,
                   options=(),
                   channel_credentials=None,
                   call_credentials=None,
                   insecure=False,
                   compression=None,
                   wait_for_ready=None,
                   timeout=None,
                   metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libctomanage.LibcToManage/SendShares',
                                             libc__to__manage__pb2.SendSharesRequest.SerializeToString,
                                             google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteShares(request,
                     target,
                     options=(),
                     channel_credentials=None,
                     call_credentials=None,
                     insecure=False,
                     compression=None,
                     wait_for_ready=None,
                     timeout=None,
                     metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libctomanage.LibcToManage/DeleteShares',
                                             libc__to__manage__pb2.DeleteSharesRequest.SerializeToString,
                                             google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSchema(request,
                  target,
                  options=(),
                  channel_credentials=None,
                  call_credentials=None,
                  insecure=False,
                  compression=None,
                  wait_for_ready=None,
                  timeout=None,
                  metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libctomanage.LibcToManage/GetSchema',
                                             libc__to__manage__pb2.GetSchemaRequest.SerializeToString,
                                             libc__to__manage__pb2.GetSchemaResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteComputation(request,
                           target,
                           options=(),
                           channel_credentials=None,
                           call_credentials=None,
                           insecure=False,
                           compression=None,
                           wait_for_ready=None,
                           timeout=None,
                           metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libctomanage.LibcToManage/ExecuteComputation',
                                             libc__to__manage__pb2.ExecuteComputationRequest.SerializeToString,
                                             libc__to__manage__pb2.ExecuteComputationResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetComputationResult(request,
                             target,
                             options=(),
                             channel_credentials=None,
                             call_credentials=None,
                             insecure=False,
                             compression=None,
                             wait_for_ready=None,
                             timeout=None,
                             metadata=None):
        return grpc.experimental.unary_stream(request, target, '/libctomanage.LibcToManage/GetComputationResult',
                                              libc__to__manage__pb2.GetComputationRequest.SerializeToString,
                                              libc__to__manage__pb2.GetComputationResultResponse.FromString,
                                              options, channel_credentials,
                                              insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetComputationStatus(request,
                             target,
                             options=(),
                             channel_credentials=None,
                             call_credentials=None,
                             insecure=False,
                             compression=None,
                             wait_for_ready=None,
                             timeout=None,
                             metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libctomanage.LibcToManage/GetComputationStatus',
                                             libc__to__manage__pb2.GetComputationRequest.SerializeToString,
                                             libc__to__manage__pb2.GetComputationStatusResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJobErrorInfo(request,
                        target,
                        options=(),
                        channel_credentials=None,
                        call_credentials=None,
                        insecure=False,
                        compression=None,
                        wait_for_ready=None,
                        timeout=None,
                        metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libctomanage.LibcToManage/GetJobErrorInfo',
                                             libc__to__manage__pb2.GetComputationRequest.SerializeToString,
                                             libc__to__manage__pb2.GetJobErrorInfoResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetElapsedTime(request,
                       target,
                       options=(),
                       channel_credentials=None,
                       call_credentials=None,
                       insecure=False,
                       compression=None,
                       wait_for_ready=None,
                       timeout=None,
                       metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libctomanage.LibcToManage/GetElapsedTime',
                                             libc__to__manage__pb2.GetElapsedTimeRequest.SerializeToString,
                                             libc__to__manage__pb2.GetElapsedTimeResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddShareDataFrame(request,
                          target,
                          options=(),
                          channel_credentials=None,
                          call_credentials=None,
                          insecure=False,
                          compression=None,
                          wait_for_ready=None,
                          timeout=None,
                          metadata=None):
        return grpc.experimental.unary_unary(request, target, '/libctomanage.LibcToManage/AddShareDataFrame',
                                             libc__to__manage__pb2.AddShareDataFrameRequest.SerializeToString,
                                             libc__to__manage__pb2.AddShareDataFrameResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
