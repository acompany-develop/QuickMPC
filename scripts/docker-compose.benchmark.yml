# require {docker-compose.core.yml, docker-compose.dev.yml}
version: '3.3'
services:
  benchmark_cc1:
    container_name: computation_container1
    depends_on:
      dev_bts:
        condition: service_healthy
      dev_cc_envoy1:
        condition: service_started
    image: ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    build:
      context: ../
      dockerfile: packages/server/computation_container/Dockerfile
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
      target: medium
    volumes:
      - target: /QuickMPC/config
        source: ../config/computation_container/compute1
        type: bind
      - target: /db/share
        source: sharedb1
        type: volume
      - target: /db/result
        source: resultdb1
        type: volume
    command:
      - /bin/bash
      - '-c'
      - printenv && ./computation_container_benchmark
    env_file:
      - ../config/computation_container/compute1/.env
      - ../config/computation_container/jwt/client.sample.env
    networks:
      shared-network:
        ipv4_address: 10.0.1.20
    expose:
      - 51020
      - 50010
  benchmark_cc2:
    container_name: computation_container2
    depends_on:
      dev_bts:
        condition: service_healthy
      dev_cc_envoy2:
        condition: service_started
    image: ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    build:
      context: ../
      dockerfile: packages/server/computation_container/Dockerfile
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
      target: medium
    volumes:
      - target: /QuickMPC/config
        source: ../config/computation_container/compute2
        type: bind
      - target: /db/share
        source: sharedb2
        type: volume
      - target: /db/result
        source: resultdb2
        type: volume
    command:
      - /bin/bash
      - '-c'
      - printenv && ./computation_container_benchmark
    env_file:
      - ../config/computation_container/compute2/.env
      - ../config/computation_container/jwt/client.sample.env
    networks:
      shared-network:
        ipv4_address: 10.0.2.20
    expose:
      - 51020
      - 50010
  benchmark_cc3:
    container_name: computation_container3
    depends_on:
      dev_bts:
        condition: service_healthy
      dev_cc_envoy3:
        condition: service_started
    image: ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    build:
      context: ../
      dockerfile: packages/server/computation_container/Dockerfile
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
      target: medium
    volumes:
      - target: /QuickMPC/config
        source: ../config/computation_container/compute3
        type: bind
      - target: /db/share
        source: sharedb3
        type: volume
      - target: /db/result
        source: resultdb3
        type: volume
    command:
      - /bin/bash
      - '-c'
      - printenv && ./computation_container_benchmark
    env_file:
      - ../config/computation_container/compute3/.env
      - ../config/computation_container/jwt/client.sample.env
    networks:
      shared-network:
        ipv4_address: 10.0.3.20
    expose:
      - 51020
      - 50010
    tty: true
  benchmark-libc:
    container_name: libclient
    depends_on:
      dev_mc1:
        condition: service_healthy
      dev_mc2:
        condition: service_healthy
      dev_mc3:
        condition: service_healthy
    image: ghcr.io/acompany-develop/quickmpc-libc:test-libc-medium
    build:
      context: ../
      dockerfile: scripts/libclient/Dockerfile
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-libc:test-libc-medium
      target: medium
    volumes:
      - target: /libclient/data
        source: ./libclient/data
        type: bind
      - target: /libclient/src
        source: ./libclient/src
        type: bind
    command:
      - /bin/bash
      - '-c'
      - pip list && pytest src/benchmark -s -v -log-cli-level=DEBUG
    network_mode: host