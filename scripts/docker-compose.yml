version: "3.3"
services:
  dev_cc1:
    tty: true
    container_name: computation_container1
    expose:
      - "51020"
      - "50010"
    image: ghcr.io/acompany-develop/quickmpc-cc:test-cc-dev
    build:
      context: ../
      dockerfile: packages/server/ComputationContainer/Dockerfile
      target: dev
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-cc:test-cc-dev
    volumes:
      - type: bind
        source: ../Config/ComputationContainer/Compute1
        target: /QuickMPC/Config
      - type: volume
        source: sharedb1
        target: /Db/share
      - type: volume
        source: resultdb1
        target: /Db/result
    env_file:
      - ../Config/ComputationContainer/Compute1/.env
      - ../Config/ComputationContainer/JWT/client.sample.env
    networks:
      shared-network:
        ipv4_address: 10.0.1.20
    depends_on:
      dev_bts:
        condition: service_healthy
    command: ["/bin/bash", "-c", "printenv && ./computation_container"]
    healthcheck:
      test: [
          "CMD-SHELL",
          "/bin/grpc_health_probe -addr=computation_container1:50010 &&
          /bin/grpc_health_probe -addr=computation_container1:51020
          ",
        ]
      interval: 3s
      timeout: 5s
      start_period: 5s

  dev_cc2:
    tty: true # docker run -t
    container_name: computation_container2
    expose:
      - "51020"
      - "50010"
    image: ghcr.io/acompany-develop/quickmpc-cc:test-cc-dev
    build:
      context: ../
      dockerfile: packages/server/ComputationContainer/Dockerfile
      target: dev
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-cc:test-cc-dev
    volumes:
      - type: bind
        source: ../Config/ComputationContainer/Compute2
        target: /QuickMPC/Config
      - type: volume
        source: sharedb2
        target: /Db/share
      - type: volume
        source: resultdb2
        target: /Db/result
    env_file:
      - ../Config/ComputationContainer/Compute2/.env
      - ../Config/ComputationContainer/JWT/client.sample.env
    networks:
      shared-network:
        ipv4_address: 10.0.2.20
    command: ["/bin/bash", "-c", "printenv && ./computation_container"]
    healthcheck:
      test: [
          "CMD-SHELL",
          "/bin/grpc_health_probe -addr=computation_container2:50010 &&
          /bin/grpc_health_probe -addr=computation_container2:51020
          ",
        ]
      interval: 3s
      timeout: 5s
      start_period: 5s

  dev_cc3:
    tty: true
    container_name: computation_container3
    expose:
      - "51020"
      - "50010"
    image: ghcr.io/acompany-develop/quickmpc-cc:test-cc-dev
    build:
      context: ../
      dockerfile: packages/server/ComputationContainer/Dockerfile
      target: dev
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-cc:test-cc-dev
    volumes:
      - type: bind
        source: ../Config/ComputationContainer/Compute3
        target: /QuickMPC/Config
      - type: volume
        source: sharedb3
        target: /Db/share
      - type: volume
        source: resultdb3
        target: /Db/result
    env_file:
      - ../Config/ComputationContainer/Compute3/.env
      - ../Config/ComputationContainer/JWT/client.sample.env
    networks:
      shared-network:
        ipv4_address: 10.0.3.20
    command: ["/bin/bash", "-c", "printenv && ./computation_container"]
    healthcheck:
      test: [
          "CMD-SHELL",
          "/bin/grpc_health_probe -addr=computation_container3:50010 &&
          /bin/grpc_health_probe -addr=computation_container3:51020
          ",
        ]
      interval: 3s
      timeout: 5s
      start_period: 5s

  # dev_bts_envoy:
  #   tty: true # 起動しっぱなし
  #   image: envoyproxy/envoy:v1.17.1
  #   volumes:
  #     - type: bind
  #       source: ../Config/envoy.yaml
  #       target: /etc/envoy/envoy.yaml
  #   expose:
  #     - "9901"
  #   ports:
  #     - "0.0.0.0:51020:51020"
  #   networks:
  #     shared-network:
  #       ipv4_address: 10.0.1.21
  #   command: ["/bin/sh", "-c", "/usr/local/bin/envoy -c /etc/envoy/envoy.yaml"]

  dev_bts:
    container_name: beaver_triple_service
    image: ghcr.io/acompany-develop/quickmpc-bts:test-bts-dev
    build:
      context: ../
      dockerfile: packages/server/BeaverTripleService/Dockerfile
      target: dev
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-bts:test-bts-dev
    volumes:
      - type: bind
        source: ../Config/BeaverTripleService
        target: /QuickMPC/Config
    env_file:
      - ../Config/BeaverTripleService/.env
      - ../Config/BeaverTripleService/server.sample.env
    ports:
      - "0.0.0.0:60020:50020"
    networks:
      shared-network:
        aliases:
          - beaver_triple_service
        ipv4_address: 10.0.1.40
    command: ["/bin/bash", "-c", "./BeaverTripleService"]
    healthcheck:
      test: [
          "CMD-SHELL",
          '/bin/grpc_health_probe
          -addr=beaver_triple_service:50020
          -rpc-header=authorization:"bearer $$BTS_TOKEN"',
        ]
      interval: 3s
      timeout: 5s
      start_period: 5s

  dev_mc1:
    container_name: manage_container1
    tty: true # 起動しっぱなし
    image: ghcr.io/acompany-develop/quickmpc-mc:test-mc-dev
    build:
      context: ../
      dockerfile: packages/server/ManageContainer/Dockerfile
      target: dev
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-mc:test-mc-dev
    volumes:
      - type: bind
        source: ../Config/ManageContainer/Manage1
        target: /QuickMPC/Config
      # 開発環境のフォーマッタを統一
      - type: bind
        source: ../.vscode
        target: /QuickMPC/.vscode
      - type: volume
        source: sharedb1
        target: /Db/share
      - type: volume
        source: resultdb1
        target: /Db/result
    env_file:
      - ../Config/ManageContainer/Manage1/.env
    expose:
      - "50010"
      - "50011"
    networks:
      shared-network:
        ipv4_address: 10.0.1.10
    command: ["/bin/bash", "-c", "printenv && ./ManageContainer"]
    healthcheck:
      test: [
          "CMD-SHELL",
          "/bin/grpc_health_probe -addr=manage_container1:50010 &&
          /bin/grpc_health_probe -addr=manage_container1:50011
          ",
        ]
      interval: 3s
      timeout: 5s
      start_period: 5s
    depends_on:
      dev_mc_envoy1:
        condition: service_started
      dev_cc1:
        condition: service_started

  dev_mc_envoy1:
    container_name: manage_envoy_container1
    tty: true # 起動しっぱなし
    image: envoyproxy/envoy:v1.17.1
    volumes:
      - type: bind
        source: ../Config/ManageContainer/Manage1/envoy.yaml
        target: /etc/envoy/envoy.yaml
    expose:
      - "15000"
    ports:
      - "0.0.0.0:9001:9000"
    networks:
      shared-network:
        ipv4_address: 10.0.1.11
    command: ["/bin/sh", "-c", "/usr/local/bin/envoy -c /etc/envoy/envoy.yaml"]

  dev_mc2:
    container_name: manage_container2
    tty: true # 起動しっぱなし
    image: ghcr.io/acompany-develop/quickmpc-mc:test-mc-dev
    build:
      context: ../
      dockerfile: packages/server/ManageContainer/Dockerfile
      target: dev
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-mc:test-mc-dev
    volumes:
      - type: bind
        source: ../Config/ManageContainer/Manage2
        target: /QuickMPC/Config
      - type: volume
        source: sharedb2
        target: /Db/share
      - type: volume
        source: resultdb2
        target: /Db/result
    env_file:
      - ../Config/ManageContainer/Manage2/.env
    expose:
      - "50010"
      - "50011"
    networks:
      shared-network:
        ipv4_address: 10.0.2.10
    command: ["/bin/bash", "-c", "printenv && ./ManageContainer"]
    healthcheck:
      test: [
          "CMD-SHELL",
          "/bin/grpc_health_probe -addr=manage_container2:50010 &&
          /bin/grpc_health_probe -addr=manage_container2:50011
          ",
        ]
      interval: 3s
      timeout: 5s
      start_period: 5s
    depends_on:
      dev_mc_envoy2:
        condition: service_started
      dev_cc2:
        condition: service_started

  dev_mc_envoy2:
    container_name: manage_envoy_container2
    tty: true # 起動しっぱなし
    image: envoyproxy/envoy:v1.17.1
    volumes:
      - type: bind
        source: ../Config/ManageContainer/Manage2/envoy.yaml
        target: /etc/envoy/envoy.yaml
    expose:
      - "15000"
    ports:
      - "0.0.0.0:9002:9000"
    networks:
      shared-network:
        ipv4_address: 10.0.2.11
    command: ["/bin/sh", "-c", "/usr/local/bin/envoy -c /etc/envoy/envoy.yaml"]

  dev_mc3:
    container_name: manage_container3
    tty: true # 起動しっぱなし
    image: ghcr.io/acompany-develop/quickmpc-mc:test-mc-dev
    build:
      context: ../
      dockerfile: packages/server/ManageContainer/Dockerfile
      target: dev
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-mc:test-mc-dev
    volumes:
      - type: bind
        source: ../Config/ManageContainer/Manage3
        target: /QuickMPC/Config
      - type: volume
        source: sharedb3
        target: /Db/share
      - type: volume
        source: resultdb3
        target: /Db/result
    env_file:
      - ../Config/ManageContainer/Manage3/.env
    expose:
      - "50010"
      - "50011"
    networks:
      shared-network:
        ipv4_address: 10.0.3.10
    command: ["/bin/bash", "-c", "printenv && ./ManageContainer"]
    healthcheck:
      test: [
          "CMD-SHELL",
          "/bin/grpc_health_probe -addr=manage_container3:50010 &&
          /bin/grpc_health_probe -addr=manage_container3:50011
          ",
        ]
      interval: 3s
      timeout: 5s
      start_period: 5s
    depends_on:
      dev_mc_envoy3:
        condition: service_started
      dev_cc3:
        condition: service_started

  dev_mc_envoy3:
    container_name: manage_envoy_container3
    tty: true # 起動しっぱなし
    image: envoyproxy/envoy:v1.17.1
    volumes:
      - type: bind
        source: ../Config/ManageContainer/Manage3/envoy.yaml
        target: /etc/envoy/envoy.yaml
    expose:
      - "15000"
    ports:
      - "0.0.0.0:9003:9000"
    networks:
      shared-network:
        ipv4_address: 10.0.3.11
    command: ["/bin/sh", "-c", "/usr/local/bin/envoy -c /etc/envoy/envoy.yaml"]

  small_cc:
    container_name: computation_container1
    tty: true # 起動しっぱなし
    volumes:
      - type: volume
        source: sharedb1
        target: /Db/share
      - type: volume
        source: resultdb1
        target: /Db/result
    image: ghcr.io/acompany-develop/quickmpc-cc:test-cc-small
    build:
      context: ../
      dockerfile: packages/server/ComputationContainer/Dockerfile
      # temporarily change build stage from `small` to `small_tmp` because it takes long time.
      # TODO(#36): improve performance
      target: small_tmp
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-cc:test-cc-small

  small_mc:
    container_name: manage_container1
    tty: true # 起動しっぱなし
    image: ghcr.io/acompany-develop/quickmpc-mc:test-mc-small
    build:
      context: ../
      dockerfile: packages/server/ManageContainer/Dockerfile
      target: small
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-mc:test-mc-small
    volumes:
      - type: volume
        source: sharedb1
        target: /Db/share
      - type: volume
        source: resultdb1
        target: /Db/result
    env_file:
      - ../Config/ManageContainer/Manage1/.env

  small_bts:
    container_name: beaver_triple_service
    tty: true # 起動しっぱなし
    image: ghcr.io/acompany-develop/quickmpc-bts:test-bts-small
    build:
      context: ../
      dockerfile: packages/server/ManageContainer/Dockerfile
      target: small
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-bts:test-bts-small
    volumes:
      - type: bind
        source: ../Config/BeaverTripleService
        target: /QuickMPC/Config
    env_file:
      - ../Config/BeaverTripleService/.env
      - ../Config/BeaverTripleService/server.sample.env
    expose:
      - "50020"

  medium_cc1:
    container_name: computation_container1
    expose:
      - "51020"
      - "50010"
    image: ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    build:
      context: ../
      dockerfile: packages/server/ComputationContainer/Dockerfile
      target: medium
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    volumes:
      - type: bind
        source: ../Config/ComputationContainer/Compute1
        target: /QuickMPC/Config
      - type: volume
        source: sharedb1
        target: /Db/share
      - type: volume
        source: resultdb1
        target: /Db/result
    env_file:
      - ../Config/ComputationContainer/Compute1/.env
      - ../Config/ComputationContainer/JWT/client.sample.env
    networks:
      shared-network:
        ipv4_address: 10.0.1.20
    depends_on:
      dev_bts:
        condition: service_healthy
    command: ["/bin/bash", "-c", "printenv && ./computation_container_test"]

  medium_cc2:
    container_name: computation_container2
    expose:
      - "51020"
      - "50010"
    image: ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    build:
      context: ../
      dockerfile: packages/server/ComputationContainer/Dockerfile
      target: medium
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    volumes:
      - type: bind
        source: ../Config/ComputationContainer/Compute2
        target: /QuickMPC/Config
      - type: volume
        source: sharedb2
        target: /Db/share
      - type: volume
        source: resultdb2
        target: /Db/result
    env_file:
      - ../Config/ComputationContainer/Compute2/.env
      - ../Config/ComputationContainer/JWT/client.sample.env
    networks:
      shared-network:
        ipv4_address: 10.0.2.20
    depends_on:
      dev_bts:
        condition: service_healthy
    command: ["/bin/bash", "-c", "printenv && ./computation_container_test"]

  medium_cc3:
    tty: true # docker run -t
    container_name: computation_container3
    expose:
      - "51020"
      - "50010"
    image: ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    build:
      context: ../
      dockerfile: packages/server/ComputationContainer/Dockerfile
      target: medium
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    volumes:
      - type: bind
        source: ../Config/ComputationContainer/Compute3
        target: /QuickMPC/Config
      - type: volume
        source: sharedb3
        target: /Db/share
      - type: volume
        source: resultdb3
        target: /Db/result
    env_file:
      - ../Config/ComputationContainer/Compute3/.env
      - ../Config/ComputationContainer/JWT/client.sample.env
    networks:
      shared-network:
        ipv4_address: 10.0.3.20
    depends_on:
      dev_bts:
        condition: service_healthy
    command: ["/bin/bash", "-c", "printenv && ./computation_container_test"]

  benchmark_cc1:
    container_name: computation_container1
    expose:
      - "51020"
      - "50010"
    image: ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    build:
      context: ../
      dockerfile: packages/server/ComputationContainer/Dockerfile
      target: medium
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    volumes:
      - type: bind
        source: ../Config/ComputationContainer/Compute1
        target: /QuickMPC/Config
      - type: volume
        source: sharedb1
        target: /Db/share
      - type: volume
        source: resultdb1
        target: /Db/result
    env_file:
      - ../Config/ComputationContainer/Compute1/.env
      - ../Config/ComputationContainer/JWT/client.sample.env
    networks:
      shared-network:
        ipv4_address: 10.0.1.20
    depends_on:
      dev_bts:
        condition: service_healthy
    command:
      ["/bin/bash", "-c", "printenv && ./computation_container_benchmark"]

  benchmark_cc2:
    container_name: computation_container2
    expose:
      - "51020"
      - "50010"
    image: ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    build:
      context: ../
      dockerfile: packages/server/ComputationContainer/Dockerfile
      target: medium
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    volumes:
      - type: bind
        source: ../Config/ComputationContainer/Compute2
        target: /QuickMPC/Config
      - type: volume
        source: sharedb2
        target: /Db/share
      - type: volume
        source: resultdb2
        target: /Db/result
    env_file:
      - ../Config/ComputationContainer/Compute2/.env
      - ../Config/ComputationContainer/JWT/client.sample.env
    networks:
      shared-network:
        ipv4_address: 10.0.2.20
    depends_on:
      dev_bts:
        condition: service_healthy
    command:
      ["/bin/bash", "-c", "printenv && ./computation_container_benchmark"]

  benchmark_cc3:
    tty: true # docker run -t
    container_name: computation_container3
    expose:
      - "51020"
      - "50010"
    image: ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    build:
      context: ../
      dockerfile: packages/server/ComputationContainer/Dockerfile
      target: medium
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-cc:test-cc-medium
    volumes:
      - type: bind
        source: ../Config/ComputationContainer/Compute3
        target: /QuickMPC/Config
      - type: volume
        source: sharedb3
        target: /Db/share
      - type: volume
        source: resultdb3
        target: /Db/result
    env_file:
      - ../Config/ComputationContainer/Compute3/.env
      - ../Config/ComputationContainer/JWT/client.sample.env
    networks:
      shared-network:
        ipv4_address: 10.0.3.20
    depends_on:
      dev_bts:
        condition: service_healthy
    command:
      ["/bin/bash", "-c", "printenv && ./computation_container_benchmark"]

  medium_mc1:
    container_name: manage_container1
    image: ghcr.io/acompany-develop/quickmpc-mc:test-mc-medium
    build:
      context: ../
      dockerfile: packages/server/ManageContainer/Dockerfile
      target: medium
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-mc:test-mc-medium
    volumes:
      - type: bind
        source: ../Config/ManageContainer/Manage1
        target: /QuickMPC/Config
      - type: volume
        source: sharedb1
        target: /Db/share
      - type: volume
        source: resultdb1
        target: /Db/result
    env_file:
      - ../Config/ManageContainer/Manage1/.env
    expose:
      - "50010"
      - "50011"
    networks:
      shared-network:
        ipv4_address: 10.0.1.10
    command:
      ["/bin/bash", "-c", "printenv && go test ./IntegrationTest/... -v -cover"]

  medium_mc2:
    container_name: manage_container2
    image: ghcr.io/acompany-develop/quickmpc-mc:test-mc-medium
    build:
      context: ../
      dockerfile: packages/server/ManageContainer/Dockerfile
      target: medium
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-mc:test-mc-medium
    volumes:
      - type: bind
        source: ../Config/ManageContainer/Manage2
        target: /QuickMPC/Config
      - type: volume
        source: sharedb2
        target: /Db/share
      - type: volume
        source: resultdb2
        target: /Db/result
    env_file:
      - ../Config/ManageContainer/Manage2/.env
    expose:
      - "50010"
      - "50011"
    networks:
      shared-network:
        ipv4_address: 10.0.2.10
    command:
      ["/bin/bash", "-c", "printenv && go test ./IntegrationTest/... -v -cover"]

  medium_mc3:
    container_name: manage_container3
    image: ghcr.io/acompany-develop/quickmpc-mc:test-mc-medium
    build:
      context: ../
      dockerfile: packages/server/ManageContainer/Dockerfile
      target: medium
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-mc:test-mc-medium
    volumes:
      - type: bind
        source: ../Config/ManageContainer/Manage3
        target: /QuickMPC/Config
      - type: volume
        source: sharedb3
        target: /Db/share
      - type: volume
        source: resultdb3
        target: /Db/result
    env_file:
      - ../Config/ManageContainer/Manage3/.env
    expose:
      - "50010"
      - "50011"
    networks:
      shared-network:
        ipv4_address: 10.0.3.10
    command:
      ["/bin/bash", "-c", "printenv && go test ./IntegrationTest/... -v -cover"]

  send_share_mc1:
    container_name: manage_container1
    tty: true # 起動しっぱなし
    image: ghcr.io/acompany-develop/quickmpc-mc:test-mc-dev
    build:
      context: ../
      dockerfile: packages/server/ManageContainer/Dockerfile
      target: dev
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-mc:test-mc-dev
    volumes:
      - type: bind
        source: ../Config/ManageContainer/Manage1
        target: /QuickMPC/Config
      # 開発環境のフォーマッタを統一
      - type: bind
        source: ../.vscode
        target: /QuickMPC/.vscode
      - type: volume
        source: sharedb1
        target: /Db/share
      - type: volume
        source: resultdb1
        target: /Db/result
    env_file:
      - ../Config/ManageContainer/Manage1/.env
    expose:
      - "50010"
      - "50011"
    networks:
      shared-network:
        ipv4_address: 10.0.1.10
    command: ["/bin/bash", "-c", "printenv && ./ManageContainer"]
    depends_on:
      dev_mc_envoy1:
        condition: service_started

  send_share_mc2:
    container_name: manage_container2
    tty: true # 起動しっぱなし
    image: ghcr.io/acompany-develop/quickmpc-mc:test-mc-dev
    build:
      context: ../
      dockerfile: packages/server/ManageContainer/Dockerfile
      target: dev
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-mc:test-mc-dev
    volumes:
      - type: bind
        source: ../Config/ManageContainer/Manage2
        target: /QuickMPC/Config
      - type: volume
        source: sharedb2
        target: /Db/share
      - type: volume
        source: resultdb2
        target: /Db/result
    env_file:
      - ../Config/ManageContainer/Manage2/.env
    expose:
      - "50010"
      - "50011"
    networks:
      shared-network:
        ipv4_address: 10.0.2.10
    command: ["/bin/bash", "-c", "printenv && ./ManageContainer"]
    depends_on:
      dev_mc_envoy2:
        condition: service_started

  send_share_mc3:
    container_name: manage_container3
    tty: true # 起動しっぱなし
    image: ghcr.io/acompany-develop/quickmpc-mc:test-mc-dev
    build:
      context: ../
      dockerfile: packages/server/ManageContainer/Dockerfile
      target: dev
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-mc:test-mc-dev
    volumes:
      - type: bind
        source: ../Config/ManageContainer/Manage3
        target: /QuickMPC/Config
      - type: volume
        source: sharedb3
        target: /Db/share
      - type: volume
        source: resultdb3
        target: /Db/result
    env_file:
      - ../Config/ManageContainer/Manage3/.env
    expose:
      - "50010"
      - "50011"
    networks:
      shared-network:
        ipv4_address: 10.0.3.10
    command: ["/bin/bash", "-c", "printenv && ./ManageContainer"]
    depends_on:
      dev_mc_envoy3:
        condition: service_started

  medium-libc:
    container_name: lib_client
    image: ghcr.io/acompany-develop/quickmpc-libc:test-libc-medium
    build:
      context: ../
      dockerfile: scripts/LibClient/Dockerfile
      target: medium
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-libc:test-libc-medium
    volumes:
      - type: bind
        source: ./LibClient/Data
        target: /LibClient/Data
      - type: bind
        source: ./LibClient/src
        target: /LibClient/src
    command:
      [
        "/bin/bash",
        "-c",
        "pip list && pytest src/tests -s -v -log-cli-level=DEBUG",
      ]
    network_mode: "host"
    depends_on:
      dev_mc1:
        condition: service_healthy
      dev_mc2:
        condition: service_healthy
      dev_mc3:
        condition: service_healthy

  benchmark-libc:
    container_name: lib_client
    image: ghcr.io/acompany-develop/quickmpc-libc:test-libc-medium
    build:
      context: ../
      dockerfile: scripts/LibClient/Dockerfile
      target: medium
      cache_from:
        - type=registry,ref=ghcr.io/acompany-develop/quickmpc-libc:test-libc-medium
    volumes:
      - type: bind
        source: ./LibClient/Data
        target: /LibClient/Data
      - type: bind
        source: ./LibClient/src
        target: /LibClient/src
    command:
      [
        "/bin/bash",
        "-c",
        "pip list && pytest src/benchmark -s -v -log-cli-level=DEBUG",
      ]
    network_mode: "host"
    depends_on:
      dev_mc1:
        condition: service_healthy
      dev_mc2:
        condition: service_healthy
      dev_mc3:
        condition: service_healthy

volumes:
  sharedb1:
  sharedb2:
  sharedb3:
  resultdb1:
  resultdb2:
  resultdb3:
networks:
  shared-network:
    external: true
